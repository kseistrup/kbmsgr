#!/usr/bin/env bash
# -*- mode: sh; coding: utf-8 -*-
ME="${0##*/}"
##############################################################################
# This program is free software; you can redistribute it and/or modify it    #
# under the terms of the GNU General Public License as published by the Free #
# Software Foundation; either version 3 of the License, or (at your option)  #
# any later version.                                                         #
#                                                                            #
# This program is distributed in the hope that it will be useful, but with-  #
# out any warranty; without even the implied warranty of merchantability or  #
# fitness for a particular purpose.  See the GNU General Public License for  #
# more details.  <http://gplv3.fsf.org/>                                     #
##############################################################################

MY_APPNAME='kbmsgr-loop'
MY_AUTHOR='Klaus Alexander Seistrup <klaus@seistrup.dk>'
MY_REVISION='2016-08-27'
MY_VERSION="0.1.5 (${MY_REVISION})"
MY_COPYRIGHT="\
kbmsgr-loop/${MY_VERSION}
Copyright © 2016 ${MY_AUTHOR}

This is free software; see the source for copying conditions.  There is no
warranty; not even for merchantability or fitness for a particular purpose.\
"
MY_HELP="
usage: ${ME} [OPTIONS] <MYFILE> <THEIRFILE>

positional arguments:
  MYFILE            full path to my messages file
  THEIRFILE         full path to their messages file

options:
  -h, --help        display this help and exit
  -v, --version     output version information and exit
  -c, --copyright   show copying policy and exit
"
SPINNER=(◐ ◓ ◑ ◒)
SPINNER_LEN="${#SPINNER[@]}"

WHITE=$(printf '\x1b[37m')

die () {
  [[ -n "${1}" ]] && {
    echo "${ME}:" "${@}" >&2
    exit 1
  }
  exit 0
}

my_help () {
  echo "${MY_HELP}"
}

my_version () {
  echo "${MY_APPNAME}/${MY_VERSION}"
}

my_copyright () {
  echo "${MY_COPYRIGHT}"
}

spinner () {
  local colour="${1}"
  local char="${2}"
  local seconds="${3}"
  local plur='s'

  [[ ${seconds} -eq 1 ]] && plur=''

  printf '\x1b[K\x1b[%s%s\x1b[0m \x1b[2m[\x1b[0mNext update in %s second%s\x1b[2m]\x1b[0m\r' "${colour}" "${char}" "${seconds}" "${plur}"
}

goto () {
  local column="${1}"
  local line="${2}"

  printf '\x1b[%s;%sH' "${line}" "${column}"
}

loop_forever () {
  local myfile="${1}"
  local theirfile="${2}"

  local mydate
  local theirdate
  local index
  local mychanged
  local theirchanged
  local changed=false

  mydate=$(stat --format='%Y' "${myfile}")
  theirdate=$(stat --format='%Y' "${theirfile}")

  while :
  do
    goto 0 0
    kbmsgr-read "${myfile}" "${theirfile}"
    spinner "${WHITE}" "${SPINNER[0]}" 60
    sleep 1

    for i in {59..1}
    do
      # Check my file at even seconds and their file at odd seconds

      if [[ $((i % 2)) -eq 0 ]]
      then
        mychanged=$(stat --format='%Y' "${myfile}")
	[[ ("${mychanged}" > "${mydate}") ]] && {
	  mydate="${mychanged}"
	  changed=true
	}
      else
        theirchanged=$(stat --format='%Y' "${theirfile}")
	[[ ("${theirchanged}" > "${theirdate}") ]] && {
	  theirdate="${theirchanged}"
	  changed=true
        }
      fi
      [[ "${changed}" == "true" ]] && {
        goto 0 0
        kbmsgr-read "${myfile}" "${theirfile}"
	changed=false
      }
      index=$((i % SPINNER_LEN))
      spinner "${WHITE}" "${SPINNER[index]}" "${i}"
      sleep 1
    done
  done
}

main () {
  local myfile="${1}"
  local theirfile="${2}"

  case "${1}" in
    -h | --help )
      my_help
      die
    ;;
    -v | --version )
      my_version
      die
    ;;
    -c | --copyright )
      my_copyright
      die
    ;;
    -* )
      die "unrecognized option ‘${1}’"
    ;;
  esac

  [[ -z "${theirfile}" ]] && die 'missing argument: THEIRFILE'
  [[ -z "${myfile}" ]] && die 'missing argument: MYFILE'

  [[ -f "${myfile}" ]] || {
    touch "${myfile}" \
    || die "cannot create file ‘${myfile}’"
  }

  [[ -f "${theirfile}" ]] || {
    touch "${theirfile}" \
    || die "cannot create file ‘${theirfile}’"
  }

  loop_forever "${myfile}" "${theirfile}"
}

main "${@}"

:
# eof
